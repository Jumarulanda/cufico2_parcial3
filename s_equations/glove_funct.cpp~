#include <iostream>
#include <vector>
#include <iomanip>
#include "s_eq_class.h"
#include "../rk_int/rk_int.h"

using namespace std;
//using namespace namespace_s_eq;

vector <double> f(double);
double glove_1(double,  vector <double> );
double glove_2(double,  vector <double> );
vector <double> boundary {1,0,0.1};

int main()
{
  vector <double> (*pfunc)(double) = f;
  rk_int :: rk rk_integrator;
  double t_step = 0.1;
  rk_integrator.set_tstep(t_step);
  vector<vector<double>> solutions;

 
  vector <double> boundary_2 {1,3,4}; 
  vector< double (*)(double,vector<double>)> ode_syst_1 = {*glove_1,*glove_2};
  double t_end = 5.;
  solutions  = rk_integrator.odint_rk4(ode_syst_1,boundary, t_end);
}

vector <double> f(double x)
{
  double px = -2./x;
  double qx = 2./pow(x,2.);
  double rx = sin(log(x))/pow(x,2.);
  vector <double> eq_values {px,qx,rx};
  return eq_values;
}

double glove_1(double x,  vector <double> y)
{ 
  s_diff_eq c_ins(boundary,f);
  double result = c_ins.y_prime(x,y);
  return result;
}
double glove_2(double x,  vector <double> y)
{
  s_diff_eq c_ins2(boundary,f);
  double result = c_ins2.y_dprime_1(x,y);
  return result;
}
double glove_3(double x,  vector <double> y)
{
  s_diff_eq c_ins2(boundary,f);
  double result = c_ins2.y_dprime_2(x,y);
  return result;
}
